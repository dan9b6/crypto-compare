{"ast":null,"code":"import _regeneratorRuntime from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _defineProperty from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Development\\\\learn\\\\crypto-compare\\\\web\\\\pages\\\\post\\\\[slug].js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"categories\\\": categories[]->title,\\n  \\\"authorImage\\\": author->image,\\n  body,\\n  currency,\\n  amount,\\n  \\\"cryptoName\\\": crypto->name,\\n  \\\"cryptoImage\\\": crypto->image,\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// [slug].js\nimport groq from \"groq\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../client\";\nimport Link from \"next/link\"; //\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nvar Post = function Post(props) {\n  _s();\n\n  var _useState = useState([]),\n      coin = _useState[0],\n      setCoins = _useState[1];\n\n  var value = coin.market_data.current_price.gbp; // console.log(value);\n\n  var btn = window.document.getElementById(\"btn\");\n  btn.addEventListener(\"click\", function () {});\n  useEffect(function () {\n    var btn = window.document.getElementById(\"btn\");\n    btn.addEventListener(\"click\", function () {\n      console.log(value);\n    });\n    axios.get(\"https://api.coingecko.com/api/v3/coins/bitcoin\").then(function (res) {\n      setCoins(res.data); // console.log(res.data);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }, []);\n  var amount = props.amount,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body,\n      cryptoName = props.cryptoName,\n      cryptoImage = props.cryptoImage,\n      currency = props.currency,\n      _props$name = props.name,\n      name = _props$name === void 0 ? \"Missing name\" : _props$name,\n      _props$title = props.title,\n      title = _props$title === void 0 ? \"Missing title\" : _props$title;\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"By \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(BlockContent, _objectSpread({\n      blocks: body,\n      imageOptions: {\n        w: 320,\n        h: 240,\n        fit: \"max\"\n      }\n    }, client.config()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cryptoImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlFor(cryptoImage).width(50).url()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: cryptoName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [currency, amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: coin.symbol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"btn\",\n        children: \"Click Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Post, \"8D/L/h4p4/TyBGT37Gu1wiQQays=\");\n\n_c = Post;\nvar query = groq(_templateObject());\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Development/learn/crypto-compare/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","Link","useState","useEffect","axios","urlFor","source","image","Post","props","coin","setCoins","value","market_data","current_price","gbp","btn","window","document","getElementById","addEventListener","console","log","get","then","res","data","error","amount","body","cryptoName","cryptoImage","currency","name","title","w","h","fit","config","width","url","symbol","query","getInitialProps","context","slug","fetch"],"mappings":"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","sourcesContent":["// [slug].js\r\nimport groq from \"groq\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport client from \"../../client\";\r\nimport Link from \"next/link\";\r\n//\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction urlFor(source) {\r\n  return imageUrlBuilder(client).image(source);\r\n}\r\n\r\nconst Post = (props) => {\r\n  const [coin, setCoins] = useState([]);\r\n\r\n  let value = coin.market_data.current_price.gbp;\r\n  // console.log(value);\r\n\r\n  let btn = window.document.getElementById(\"btn\");\r\n  btn.addEventListener(\"click\", () => {});\r\n\r\n  useEffect(() => {\r\n    let btn = window.document.getElementById(\"btn\");\r\n    btn.addEventListener(\"click\", () => {\r\n      console.log(value);\r\n    });\r\n\r\n    axios\r\n      .get(\"https://api.coingecko.com/api/v3/coins/bitcoin\")\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n        // console.log(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const {\r\n    // POST PROPS\r\n    amount,\r\n    body = [],\r\n    cryptoName,\r\n    cryptoImage,\r\n    currency,\r\n    name = \"Missing name\",\r\n    title = \"Missing title\",\r\n  } = props;\r\n\r\n  return (\r\n    <article>\r\n      <Link href=\"/\">Click</Link>\r\n      <h1>{title}</h1>\r\n      <span>By {name}</span>\r\n      <BlockContent\r\n        blocks={body}\r\n        imageOptions={{ w: 320, h: 240, fit: \"max\" }}\r\n        {...client.config()}\r\n      />\r\n      <div>\r\n        {cryptoImage && (\r\n          <div>\r\n            <img src={urlFor(cryptoImage).width(50).url()} />\r\n          </div>\r\n        )}\r\n        <h1>{cryptoName}</h1>\r\n        <h1>\r\n          {currency}\r\n          {amount}\r\n        </h1>\r\n        <h1>{coin.symbol}</h1>\r\n        <button id=\"btn\">Click Me</button>\r\n        <h1 id=\"result\"></h1>\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\r\n  title,\r\n  \"name\": author->name,\r\n  \"categories\": categories[]->title,\r\n  \"authorImage\": author->image,\r\n  body,\r\n  currency,\r\n  amount,\r\n  \"cryptoName\": crypto->name,\r\n  \"cryptoImage\": crypto->image,\r\n}`;\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query;\r\n  return await client.fetch(query, { slug });\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}