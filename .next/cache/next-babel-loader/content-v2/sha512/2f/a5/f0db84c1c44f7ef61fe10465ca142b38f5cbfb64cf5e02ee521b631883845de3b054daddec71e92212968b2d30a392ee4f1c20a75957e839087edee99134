{"ast":null,"code":"import _regeneratorRuntime from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Development\\\\learn\\\\crypto-compare\\\\web\\\\pages\\\\post\\\\[slug].js\",\n    _this = this;\n\nimport client from \"../../client\";\n\nvar Post = function Post(props) {\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: props.slug.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]\\n  \", {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Development/learn/crypto-compare/web/pages/post/[slug].js"],"names":["client","Post","props","slug","current","getInitialProps","context","query","fetch"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAW;AACtB,sBACE;AAAA,2BACE;AAAA,gBAAKA,KAAK,CAACC,IAAN,CAAWC;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAND;;KAAMH,I;;AAQNA,IAAI,CAACI,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACrB;AADqB,kCAECA,OAAO,CAACC,KAFT,CAEbJ,IAFa,EAEbA,IAFa,oCAEN,EAFM;AAAA;AAAA,mBAGRH,MAAM,CAACQ,KAAP,+DAIX;AAAEL,cAAAA,IAAI,EAAJA;AAAF,aAJW,CAHQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeF,IAAf","sourcesContent":["import client from \"../../client\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <article>\r\n      <h1>{props.slug.current}</h1>\r\n    </article>\r\n  );\r\n};\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query;\r\n  return await client.fetch(\r\n    `\r\n    *[_type == \"post\" && slug.current == $slug][0]\r\n  `,\r\n    { slug }\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}