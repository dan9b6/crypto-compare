{"ast":null,"code":"import _regeneratorRuntime from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/regenerator\";\nimport _taggedTemplateLiteral from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _asyncToGenerator from \"C:/Development/learn/crypto-compare/web/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Development\\\\learn\\\\crypto-compare\\\\web\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      *[_type == \\\"post\\\" && publishedAt < now()]|order(publishedAt desc)\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// index.js\nimport Link from \"next/link\";\nimport groq from \"groq\";\nimport client from \"../client\"; //\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nvar Index = function Index(props) {\n  _s();\n\n  var _useState = useState([]),\n      coins = _useState[0],\n      setCoins = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  useEffect(function () {\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(function (res) {\n      setCoins(res.data);\n    })[\"catch\"](function (error) {\n      return console.log(error);\n    });\n  }, []);\n  var _props$posts = props.posts,\n      posts = _props$posts === void 0 ? [] : _props$posts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(function (_ref) {\n      var _id = _ref._id,\n          _ref$title = _ref.title,\n          title = _ref$title === void 0 ? \"\" : _ref$title,\n          _ref$slug = _ref.slug,\n          slug = _ref$slug === void 0 ? \"\" : _ref$slug,\n          _ref$_updatedAt = _ref._updatedAt,\n          _updatedAt = _ref$_updatedAt === void 0 ? \"\" : _ref$_updatedAt;\n\n      return slug && /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          href: \"/post/[slug]\",\n          as: \"/post/\".concat(slug.current),\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, _this), \" \", \"(\", new Date(_updatedAt).toDateString(), \")\"]\n      }, _id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Index, \"gHx1qk5l4wwj21mVBSeGqvpT3qc=\");\n\n_c = Index;\nIndex.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return client.fetch(groq(_templateObject()));\n\n        case 2:\n          _context.t0 = _context.sent;\n          return _context.abrupt(\"return\", {\n            posts: _context.t0\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["C:/Development/learn/crypto-compare/web/pages/index.js"],"names":["Link","groq","client","useState","useEffect","axios","Index","props","coins","setCoins","search","setSearch","get","then","res","data","error","console","log","posts","map","_id","title","slug","_updatedAt","current","Date","toDateString","getInitialProps","fetch"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,WAAnB,C,CAEA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAW;AAAA;;AAAA,kBACGJ,QAAQ,CAAC,EAAD,CADX;AAAA,MAChBK,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEKN,QAAQ,CAAC,EAAD,CAFb;AAAA,MAEhBO,MAFgB;AAAA,MAERC,SAFQ;;AAIvBP,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,KAAK,CACFO,GADH,CAEI,0HAFJ,EAIGC,IAJH,CAIQ,UAACC,GAAD,EAAS;AACbL,MAAAA,QAAQ,CAACK,GAAG,CAACC,IAAL,CAAR;AACD,KANH,WAOS,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,KAPT;AAQD,GATQ,EASN,EATM,CAAT;AAJuB,qBAeAT,KAfA,CAefY,KAfe;AAAA,MAefA,KAfe,6BAeP,EAfO;AAgBvB,sBACE;AAAA,cACGA,KAAK,CAACC,GAAN,CACC;AAAA,UAAGC,GAAH,QAAGA,GAAH;AAAA,4BAAQC,KAAR;AAAA,UAAQA,KAAR,2BAAgB,EAAhB;AAAA,2BAAoBC,IAApB;AAAA,UAAoBA,IAApB,0BAA2B,EAA3B;AAAA,iCAA+BC,UAA/B;AAAA,UAA+BA,UAA/B,gCAA4C,EAA5C;;AAAA,aACED,IAAI,iBACF;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC,cAAX;AAA0B,UAAA,EAAE,kBAAWA,IAAI,CAACE,OAAhB,CAA5B;AAAA,iCACE;AAAA,sBAAIH;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,EAGU,GAHV,OAII,IAAII,IAAJ,CAASF,UAAT,EAAqBG,YAArB,EAJJ;AAAA,SAASN,GAAT;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA,KADD;AADH;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CA/BD;;GAAMf,K;;KAAAA,K;AAiCNA,KAAK,CAACsB,eAAN,yEAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACT1B,MAAM,CAAC2B,KAAP,CAAa5B,IAAb,oBADS;;AAAA;AAAA;AAAA;AACtBkB,YAAAA,KADsB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAMA,eAAeb,KAAf","sourcesContent":["// index.js\r\nimport Link from \"next/link\";\r\nimport groq from \"groq\";\r\nimport client from \"../client\";\r\n\r\n//\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Index = (props) => {\r\n  const [coins, setCoins] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n      )\r\n      .then((res) => {\r\n        setCoins(res.data);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  }, []);\r\n\r\n  const { posts = [] } = props;\r\n  return (\r\n    <div>\r\n      {posts.map(\r\n        ({ _id, title = \"\", slug = \"\", _updatedAt = \"\" }) =>\r\n          slug && (\r\n            <li key={_id}>\r\n              <Link href=\"/post/[slug]\" as={`/post/${slug.current}`}>\r\n                <a>{title}</a>\r\n              </Link>{\" \"}\r\n              ({new Date(_updatedAt).toDateString()})\r\n            </li>\r\n          )\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nIndex.getInitialProps = async () => ({\r\n  posts: await client.fetch(groq`\r\n      *[_type == \"post\" && publishedAt < now()]|order(publishedAt desc)\r\n    `),\r\n});\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}