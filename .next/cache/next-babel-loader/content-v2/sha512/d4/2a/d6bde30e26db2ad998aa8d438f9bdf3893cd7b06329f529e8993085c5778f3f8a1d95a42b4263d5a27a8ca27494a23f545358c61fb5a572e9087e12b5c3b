{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Development\\\\learn\\\\crypto-compare\\\\web\\\\pages\\\\post\\\\[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// [slug].js\nimport groq from \"groq\";\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../client\";\nimport Link from \"next/link\"; //\n\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    0: coin,\n    1: setCoins\n  } = useState([]);\n  axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false\").then(res => {\n    setCoins(res.data); // console.log(res.data);\n  }).catch(error => console.log(error));\n  const {\n    // POST PROPS\n    amount,\n    body = [],\n    cryptoName,\n    cryptoImage,\n    currency,\n    name = \"Missing name\",\n    title = \"Missing title\"\n  } = props;\n  let bitcoin = coin[0]; // console.log(bitcoin.id);\n\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      href: \"/\",\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"By \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BlockContent, _objectSpread({\n      blocks: body,\n      imageOptions: {\n        w: 320,\n        h: 240,\n        fit: \"max\"\n      }\n    }, client.config()), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [cryptoImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: urlFor(cryptoImage).width(50).url()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: cryptoName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [currency, amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image,\n  body,\n  currency,\n  amount,\n  \"cryptoName\": crypto->name,\n  \"cryptoImage\": crypto->image,\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post;","map":{"version":3,"sources":["C:/Development/learn/crypto-compare/web/pages/post/[slug].js"],"names":["groq","imageUrlBuilder","BlockContent","client","Link","useState","useEffect","axios","urlFor","source","image","Post","props","coin","setCoins","get","then","res","data","catch","error","console","log","amount","body","cryptoName","cryptoImage","currency","name","title","bitcoin","w","h","fit","config","width","url","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOR,eAAe,CAACE,MAAD,CAAf,CAAwBO,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAmBT,QAAQ,CAAC,EAAD,CAAjC;AAEAE,EAAAA,KAAK,CACFQ,GADH,CAEI,0HAFJ,EAIGC,IAJH,CAISC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACG,GAAG,CAACC,IAAL,CAAR,CADa,CAEb;AACD,GAPH,EAQGC,KARH,CAQUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARpB;AAUA,QAAM;AACJ;AACAG,IAAAA,MAFI;AAGJC,IAAAA,IAAI,GAAG,EAHH;AAIJC,IAAAA,UAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,QANI;AAOJC,IAAAA,IAAI,GAAG,cAPH;AAQJC,IAAAA,KAAK,GAAG;AARJ,MASFjB,KATJ;AAWA,MAAIkB,OAAO,GAAGjB,IAAI,CAAC,CAAD,CAAlB,CAxBsB,CAyBtB;;AAEA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,wBAAUD,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,YAAD;AACE,MAAA,MAAM,EAAEJ,IADV;AAEE,MAAA,YAAY,EAAE;AAAEO,QAAAA,CAAC,EAAE,GAAL;AAAUC,QAAAA,CAAC,EAAE,GAAb;AAAkBC,QAAAA,GAAG,EAAE;AAAvB;AAFhB,OAGM9B,MAAM,CAAC+B,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA,YAJF,eASE;AAAA,iBACGR,WAAW,iBACV;AAAA,+BACE;AAAK,UAAA,GAAG,EAAElB,MAAM,CAACkB,WAAD,CAAN,CAAoBS,KAApB,CAA0B,EAA1B,EAA8BC,GAA9B;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAME;AAAA,kBAAKX;AAAL;AAAA;AAAA;AAAA;AAAA,cANF,eAOE;AAAA,mBACGE,QADH,EAEGJ,MAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CArDD;;AAuDA,MAAMc,KAAK,GAAGrC,IAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAVA;;AAYAW,IAAI,CAAC2B,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC9C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMlC,MAAM,CAACsC,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACD,CAJD;;AAMA,eAAe7B,IAAf","sourcesContent":["// [slug].js\r\nimport groq from \"groq\";\r\nimport imageUrlBuilder from \"@sanity/image-url\";\r\nimport BlockContent from \"@sanity/block-content-to-react\";\r\nimport client from \"../../client\";\r\nimport Link from \"next/link\";\r\n//\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction urlFor(source) {\r\n  return imageUrlBuilder(client).image(source);\r\n}\r\n\r\nconst Post = (props) => {\r\n  const [coin, setCoins] = useState([]);\r\n\r\n  axios\r\n    .get(\r\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=gbp&order=market_cap_desc&per_page=100&page=1&sparkline=false\"\r\n    )\r\n    .then((res) => {\r\n      setCoins(res.data);\r\n      // console.log(res.data);\r\n    })\r\n    .catch((error) => console.log(error));\r\n\r\n  const {\r\n    // POST PROPS\r\n    amount,\r\n    body = [],\r\n    cryptoName,\r\n    cryptoImage,\r\n    currency,\r\n    name = \"Missing name\",\r\n    title = \"Missing title\",\r\n  } = props;\r\n\r\n  let bitcoin = coin[0];\r\n  // console.log(bitcoin.id);\r\n\r\n  return (\r\n    <article>\r\n      <Link href=\"/\">Click</Link>\r\n      <h1>{title}</h1>\r\n      <span>By {name}</span>\r\n      <BlockContent\r\n        blocks={body}\r\n        imageOptions={{ w: 320, h: 240, fit: \"max\" }}\r\n        {...client.config()}\r\n      />\r\n      <div>\r\n        {cryptoImage && (\r\n          <div>\r\n            <img src={urlFor(cryptoImage).width(50).url()} />\r\n          </div>\r\n        )}\r\n        <h1>{cryptoName}</h1>\r\n        <h1>\r\n          {currency}\r\n          {amount}\r\n        </h1>\r\n        {/* <h1>{coin.symbol}</h1> */}\r\n        {/* <h1>{coin.bitcoin.gbp}</h1> */}\r\n      </div>\r\n    </article>\r\n  );\r\n};\r\n\r\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\r\n  title,\r\n  \"name\": author->name,\r\n  \"categories\": categories[]->title,\r\n  \"authorImage\": author->image,\r\n  body,\r\n  currency,\r\n  amount,\r\n  \"cryptoName\": crypto->name,\r\n  \"cryptoImage\": crypto->image,\r\n}`;\r\n\r\nPost.getInitialProps = async function (context) {\r\n  // It's important to default the slug so that it doesn't return \"undefined\"\r\n  const { slug = \"\" } = context.query;\r\n  return await client.fetch(query, { slug });\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}